Every time a user posts an issue or a proposal, the first thing we do is to check with FS module if 
the a file named exactly as the username posting exists, if it does, we add to it, if it doesn't we 
create it.

The json file data structure looks like this:


We check on page reload if the issues/items of each user is older than 1 month, then:

We count the number of votes for each item in the user file, we compare it against the total number of 
SHIELD members from the item key "members".

If 1 month has passed for any item. We calculate this on front-end based on "post-date" - then, on any 
user page load we do an update and set the status key to "ended" for the respective item and do the math 
for the results on the front-end, based on the item data.

Binary vote:

We can set it to "ended" or "nope" when the votes are >= 50% +1 for one option (only after the month 
since posted expires).

Multiple options vote:

We can set it to "ended" after the month since posted expires, whichever option has the most votes wins.
Authentication
Authentication will be done using the Proton web SDK, the user will use the mobile wallet to authenticate.

Documentation for it is available here: https://docs.protonchain.com/client-sdks/web.html

This authentication SDK will be used for BiiP (Biospheric Identity Internet Protocol) as well.

Memberships
For the membership system we will have a JSON file with all members with the following structure:

[
{"user": "catalina", "staked": 100, "type": "visionary", "expiration": "date", "status": "active"},
{"user": "maria", "staked": 1, "type": "guardian", "expiration": "date", "status": "expired"}
]
Every time a user sends the right amount of tokens to the SHIELD wallet, we check all their TX or 
transactions received from their user to the SHIELD wallet and see if the total amount is correct 
and if the staking date is less than 6 months old for GUARDINS and 12 months for VISIONARY - compared 
to the current date.

We do this check on every page reload.

After a membership expires we return all the tokens staked by the user to the user account.